@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix base: <http://tib.de/ontario/mapping#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix iasis: <http://project-iasis.eu/vocab/> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix sio: <http://semanticscience.org/resource> .
@prefix mesh: <http://purl.bioontology.org/ontology/MESH> .
@prefix dcterms: <https://dublincore.org/specifications/dublin-core/dcmi-terms/#> .
@prefix ncit: <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#> .
@prefix ex: <http://www.example.com/> .
@base <http://GenoDIS.KG/> .
@prefix genodis: <http://www.genodis.com/> .

<Variation>
	rml:logicalSource [ rml:source "/data/data/genomic/LC_LB_Seq.csv";
						rml:referenceFormulation ql:CSV 
						];
	rr:subjectMap [
		rr:template "http://purl.obolibrary.org/obo/VariO_0001/{variantID}";
		rr:class vario:VariO_0001 # variation
	];	
	rr:predicateObjectMap [
		rr:predicate sio:SIO_000061; #is_located_in
		rr:objectMap [
			rr:template "http://semanticscience.org/resource/SIO_000899/{Chr}" # chromosome
		]
	];				
	rr:predicateObjectMap [
		rr:predicate sio:SIO_000061; #is_located_in
		rr:objectMap [
			rr:template "http://www.genodis.com/genodis_0010" #start position 
		]
	];
	rr:predicateObjectMap [
		rr:predicate sio:SIO_000061; #is_located_in
		rr:objectMap [
			rr:template "http://www.genodis.com/genodis_0011" #end position
		]
	];
	rr:predicateObjectMap [
		rr:predicate sio:SIO_000061; #is_located_in
		rr:objectMap <ExonFunction>
	];	
	rr:predicateObjectMap [
		rr:predicate sio:SIO_001403; #is_associated_with
		rr:objectMap <NucleotideVariationFunction>;

	];	
	rr:predicateObjectMap [
		rr:predicate iasis:variantRegion;
		rr:objectMap [
			rml:reference "Func.refGene"
		]
	];
	rr:predicateObjectMap [
		rr:predicate sio:SIO_001403; #is_associated_with
		rr:objectMap [
			rr:template "http://www.genodis.com/genodis_0014/{ExonicFunc.refGene}"
		]
	];			
	rr:predicateObjectMap [
		rr:predicate sio:SIO_001403; #is_associated_with
		rr:objectMap [
			rr:template "http://www.genodis.com/genodis_0012/{gnomAD_genome_ALL}"
		]
	];								
	rr:predicateObjectMap [
		rr:predicate sio:SIO_001403; #is_associated_with
		rr:objectMap [
			rr:template "http://purl.obolibrary.org/obo/STATO_0000254/{AF}"
		]
	];		
	rr:predicateObjectMap [
		rr:predicate sio:SIO_001403; # is_associated_with
		rr:objectMap [
			rr:parentTriplesMap <Gene>
		]
	];		
	rr:predicateObjectMap [
		rr:predicate sio:SIO_001403; #is_associated_with
		rr:objectMap [
			rr:parentTriplesMap <Patient>
		]
	];
	rr:predicateObjectMap [
		rr:predicate sio:SIO_001403; # is_associated_with
		rr:objectMap [
			rr:parentTriplesMap <LiquidBiopsy>
		]
	];				
	rr:predicateObjectMap [
		rr:predicate skos:exactMatch;
		rr:objectMap [
			rml:reference "snp138";
		]
	];
	rr:predicateObjectMap [
		rr:predicate sio:SIO_000255; # has_annotation
		rr:objectMap <DNAannotationFunction>; # genodis:genodis_00002
		rr:termType rr:IRI;
	];
	rr:predicateObjectMap [
		rr:predicate sio:SIO_000255; # has_annotation
		rr:objectMap <CDSannotationFunction>; # genodis:genodis_00003
		rr:termType rr:IRI;
	];
	rr:predicateObjectMap [
		rr:predicate sio:SIO_000255; # has_annotation
		rr:objectMap <AAannotationFunction>; # genodis:genodis_00004
		rr:termType rr:IRI;
	].	

<ExternalLink>
	rml:logicalSource [ rml:source "/data/data/genomic/variation_cosmicID_lb.csv";
						rml:referenceFormulation ql:CSV 
						];
	rr:subjectMap [
		rr:template "http://semanticscience.org/resource/SIO_011137/{variantID}";
		rr:class sio:SIO_011137 # variation
	];						
	rr:predicateObjectMap [
		rr:predicate skos:exactMatch;
		rr:objectMap [
			rml:reference "cosmic_ID";
		]
	].

<Gene>	
	rml:logicalSource [ rml:source "/data/data/genomic/LC_LB_Seq.csv";
						rml:referenceFormulation ql:CSV
						];
	rr:subjectMap [
		rr:template "http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C16612/{Gene.refGene}"; # gene
		rr:class ncit:C16612
	];
	rr:predicateObjectMap [
		rr:predicate sio:SIO_001403; # is_associated_with
		rr:objectMap [
			rr:parentTriplesMap <Disease>
		]
	].

<Disease>
	rml:logicalSource [ rml:source "/data/data/genomic/civic_Predictive.csv";
						rml:referenceFormulation ql:CSV 
						];
	rr:subjectMap [
		rr:template "http://semanticscience.org/resource/SIO_010299/{Disease_description.refGene}"; 
		rr:class sio:SIO_010299 # disease
	].

<Patient>	
	rml:logicalSource [ rml:source "/data/data/genomic/LC_LB_Seq.csv";
						rml:referenceFormulation ql:CSV
						];
	rr:subjectMap [
		rr:template "http://semanticscience.org/resource/SIO_000393/{patientID}";
		rr:class sio:SIO_000393 # patient
	];
	rr:predicateObjectMap [
		rr:predicate iasis:hasLiquidBiopsySeqSample;
		rr:objectMap [
			rr:parentTriplesMap <LiquidBiopsy>
		]
	].

<LiquidBiopsy>	
	rml:logicalSource [ rml:source "/data/data/genomic/LC_LB_Seq.csv";
						rml:referenceFormulation ql:CSV
						];
	rr:subjectMap [
		rr:template "http://purl.bioontology.org/ontology/MESH/{sampleID}";
		rr:class mesh:D000073890 # liquid biopsy
	];
	rr:predicateObjectMap [
		rr:predicate dcterms:date;
		rr:objectMap [
			rml:reference "sampleExtractionDate";
			rr:datatype xsd:date;
		]
	].	



##########################################################################################
######################################## Functions #######################################
##########################################################################################


<NucleotideVariationFunction>
	fnml:functionValue [
        rml:logicalSource [ rml:source "/data/data/genomic/civic_Predictive.csv";
		rml:referenceFormulation ql:CSV 
							];
        rr:predicateObjectMap [
         	rr:predicate fno:executes ;
            rr:objectMap [ 
            	rr:constant ex:concat3 
        	]
        ];   
        rr:predicateObjectMap [
            rr:predicate ex:value1;
            rr:objectMap [ 
                rml:reference "Ref" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate ex:value2;
            rr:objectMap [ 
            	rr:constant "~" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate ex:value3;
            rr:objectMap [ 
                rml:reference "Alt" 
            ]
        ];        
    ]. 

####

<ExonFunction>
	fnml:functionValue [
        rml:logicalSource [ rml:source "/data/data/genomic/civic_Predictive.csv";
		rml:referenceFormulation ql:CSV 
							];
        rr:predicateObjectMap [
         	rr:predicate fno:executes ;
            rr:objectMap [ 
            	rr:constant ex:match_exon 
        	]
        ];   
        rr:predicateObjectMap [
            rr:predicate ex:combinedValue;
            rr:objectMap [ 
                rml:reference "AAChange.refGene" 
            ]
        ];       
    ]. 

######

<DNAannotationFunction>
	fnml:functionValue [
        rml:logicalSource [ rml:source "/data/data/genomic/civic_Predictive.csv";
		rml:referenceFormulation ql:CSV 
							];
        rr:predicateObjectMap [
         	rr:predicate fno:executes ;
            rr:objectMap [ 
            	rr:constant ex:concat6 
        	]
        ];   
        rr:predicateObjectMap [
            rr:predicate ex:value1;
            rr:objectMap [ 
                rml:reference "Chr" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate ex:value2;
            rr:objectMap [ 
            	rr:constant "~g." 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate ex:value3;
            rr:objectMap <PositionSplitFunction> 
        ]; 
        rr:predicateObjectMap [
            rr:predicate ex:value4;
            rr:objectMap [ 
                rml:reference "Ref" 
            ]
        ]; 
        rr:predicateObjectMap [
            rr:predicate ex:value2;
            rr:objectMap [ 
            	rr:constant "~" 
            ]
        ]; 
        rr:predicateObjectMap [
            rr:predicate ex:value4;
            rr:objectMap [ 
                rml:reference "Alt" 
            ]
        ];                              
    ]. 

<PositionSplitFunction>
	fnml:functionValue [
        rml:logicalSource [ rml:source "/data/data/genomic/civic_Predictive.csv";
		rml:referenceFormulation ql:CSV 
							];
        rr:predicateObjectMap [
         	rr:predicate fno:executes ;
            rr:objectMap [ 
            	rr:constant ex:split 
        	]
        ];
        rr:predicateObjectMap [
            rr:predicate ex:column;
            rr:objectMap [ 
                rml:reference "Start" 
            ]
        ]; 
        rr:predicateObjectMap [
            rr:predicate ex:separator;
            rr:objectMap [ 
                rr:constant "." 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate ex:index;
            rr:objectMap [ 
                rr:constant "0" 
            ]
        ];   
    ].

########

<CDSannotationFunction>
	fnml:functionValue [
        rml:logicalSource [ rml:source "/data/data/genomic/civic_Predictive.csv";
		rml:referenceFormulation ql:CSV 
							];
        rr:predicateObjectMap [
         	rr:predicate fno:executes ;
            rr:objectMap [ 
            	rr:constant ex:concat3 
        	]
        ];   
        rr:predicateObjectMap [
            rr:predicate ex:value1;
            rr:objectMap [ 
                rml:reference "Gene.refGene" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate ex:value2;
            rr:objectMap [ 
            	rr:constant "~c." 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate ex:value3;
            rr:objectMap <RearrangeFunction>
        ];                            
    ]. 

<RearrangeFunction>
	fnml:functionValue [
        rml:logicalSource [ rml:source "/data/data/genomic/civic_Predictive.csv";
		rml:referenceFormulation ql:CSV 
							];
        rr:predicateObjectMap [
         	rr:predicate fno:executes ;
            rr:objectMap [ 
            	rr:constant ex:rearrange_cds 
        	]
        ];
        rr:predicateObjectMap [
            rr:predicate ex:column;
            rr:objectMap <match_cds>
        ];   
    ].

<match_cds>
	fnml:functionValue [
        rml:logicalSource [ rml:source "/data/data/genomic/civic_Predictive.csv";
		rml:referenceFormulation ql:CSV 
							];
        rr:predicateObjectMap [
         	rr:predicate fno:executes ;
            rr:objectMap [ 
            	rr:constant ex:match_cds 
        	]
        ];   
        rr:predicateObjectMap [
            rr:predicate ex:combinedValue;
            rr:objectMap [ 
                rml:reference "AAChange.refGene" 
            ]
        ];       
    ].

####

<AAannotationFunction>
	fnml:functionValue [
        rml:logicalSource [ rml:source "/data/data/genomic/civic_Predictive.csv";
		rml:referenceFormulation ql:CSV 
							];
        rr:predicateObjectMap [
         	rr:predicate fno:executes ;
            rr:objectMap [ 
            	rr:constant ex:concat3 
        	]
        ];   
        rr:predicateObjectMap [
            rr:predicate ex:value1;
            rr:objectMap [ 
                rml:reference "Gene.refGene" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate ex:value2;
            rr:objectMap [ 
            	rr:constant "~" 
            ]
        ];
        rr:predicateObjectMap [
            rr:predicate ex:value3;
            rr:objectMap <match_aa>;
        ];        
    ]. 

<match_aa>
	fnml:functionValue [
        rml:logicalSource [ rml:source "/data/data/genomic/civic_Predictive.csv";
		rml:referenceFormulation ql:CSV 
							];
        rr:predicateObjectMap [
         	rr:predicate fno:executes ;
            rr:objectMap [ 
            	rr:constant ex:match_exon 
        	]
        ];   
        rr:predicateObjectMap [
            rr:predicate ex:combinedValue;
            rr:objectMap [ 
                rml:reference "AAChange.refGene" 
            ]
        ];       
    ]. 


 
                   

